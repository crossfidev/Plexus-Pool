; This file abuses the alternative dependency mechanism of dune to
; implement optional dependencies.
; The semantic of `(select a from (b -> c) (-> d))` is: if libraries
; `b` are present, `cp c a` and link `b` else `cp d a`. Here, we don't
; care about the cp part as we are not using the file obtained at
; all. So, we give them names only meant to not clash with anything
; and copy always the same (generated itself) empty file
; "void_for_linking".

(executable
 (name main)
 (public_name tezos-node)
 (package tezos-node)
 (libraries tezos-base
            tezos-version
            tezos-stdlib-unix
            tezos-shell-services
            tezos-workers
            tezos-rpc-http-server
            tezos-p2p
            tezos-shell
            tezos-storage
            tezos-validator
            tezos-shell-context
            tezos-protocol-updater
            (select void_for_linking-genesis from
              (tezos-embedded-protocol-genesis -> void_for_linking)
              (-> void_for_linking))
            (select void_for_linking-genesis-carthagenet from
              (tezos-embedded-protocol-genesis-carthagenet -> void_for_linking)
              (-> void_for_linking))
            (select void_for_linking-demo-noops from
              (tezos-embedded-protocol-demo-noops -> void_for_linking)
              (-> void_for_linking))
            (select void_for_linking-demo-counter from
              (tezos-embedded-protocol-demo-counter -> void_for_linking)
              (-> void_for_linking))
            (select void_for_linking-alpha from
              (tezos-embedded-protocol-alpha -> void_for_linking)
              (-> void_for_linking))
            (select void_for_linking-000-Ps9mPmXa from
              (tezos-embedded-protocol-000-Ps9mPmXa -> void_for_linking)
              (-> void_for_linking))
            (select void_for_linking-001-Pt8PXNHh from
              (tezos-embedded-protocol-001-Pt8PXNHh -> void_for_linking)
              (-> void_for_linking))
            (select void_for_linking-001-Pt8PXNHh-mempool from
              (tezos-mempool-001-Pt8PXNHh -> void_for_linking)
              (-> void_for_linking))
            (select void_for_linking-002-Pt4xzupC from
              (tezos-embedded-protocol-002-Pt4xzupC -> void_for_linking)
              (-> void_for_linking))
            (select void_for_linking-002-Pt4xzupC-mempool from
              (tezos-mempool-002-Pt4xzupC -> void_for_linking)
              (-> void_for_linking))
            cmdliner
            tls)
 (flags (:standard -open Tezos_base__TzPervasives
                   -open Tezos_base
                   -open Tezos_stdlib_unix
                   -open Tezos_shell_services
                   -open Tezos_rpc_http
                   -open Tezos_rpc_http_server
                   -open Tezos_p2p
                   -open Tezos_shell
                   -open Tezos_storage
                   -open Tezos_validator
                   -open Tezos_shell_context
                   -open Tezos_workers
                   -open Tezos_protocol_updater
                   -linkall)))

(rule
  (target void_for_linking)
  (action (write-file ${target} "")))

(install
 (package tezos-node)
 (section bin)
 (files (tezos-sandboxed-node.sh as tezos-sandboxed-node.sh)))

(alias
 (name runtest_lint)
 (deps (glob_files *.ml{,i}))
 (action (run %{lib:tezos-tooling:lint.sh} %{deps})))
